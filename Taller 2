#include <iostream>
#include <fstream>
#include <vector>
#include <string>
#include <sstream>

using namespace std;

// Función para leer un archivo y almacenar la tensión y corriente en vectores
void readData(const string& filename, vector<double>& voltage, vector<double>& current) {
    ifstream file(filename);
    double v, i;
    while (file >> v >> i) {
        voltage.push_back(v);
        current.push_back(i);
    }
}

// Función para calcular la potencia
vector<double> calculatePower(const vector<double>& voltage, const vector<double>& current) {
    vector<double> power;
    for (size_t i = 0; i < voltage.size(); ++i) {
        power.push_back(voltage[i] * current[i]);
    }
    return power;
}

// Función para encontrar el punto de máxima potencia (PMM)
double findPMM(const vector<double>& power) {
    double maxPower = 0;
    for (const auto& p : power) {
        if (p > maxPower) {
            maxPower = p;
        }
    }
    return maxPower;
}

int main() {
    // Supongamos que tenemos 3 archivos para simplificar el ejemplo
    vector<std::string> filenames = {"OutputPV_T25_G1000.txt", "OutputPV_T30_G900.txt", "OutputPV_T35_G1100.txt"};

    // Archivo de salida para almacenar los resultados
    ofstream outFile("PMM_results.txt");

    for (const auto& filename : filenames) {
        vector<double> voltage, current;

        // Leer datos del archivo
        readData(filename, voltage, current);

        // Calcular la potencia
        vector<double> power = calculatePower(voltage, current);

        // Encontrar el PMM
        double pmm = findPMM(power);

        // Extraer la temperatura y la irradiancia del nombre del archivo
        string temp = filename.substr(10, 2);
        string irr = filename.substr(15, 4);

        // Almacenar el resultado en el archivo de salida
        outFile << "Temperature: " << temp << ", Irradiance: " << irr << ", PMM: " << pmm << endl;
    }

    outFile.close();
    return 0;
}
